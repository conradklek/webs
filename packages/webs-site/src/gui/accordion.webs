<script type="module">
  import { provide, inject, state, computed } from '@conradklek/webs';

  export const AccordionItem = {
    name: 'accordion-item',
    props: {
      value: {
        type: String,
        required: true,
      },
    },
    setup(props) {
      provide('itemValue', props.value);
    },
    template(html) {
      return html`
        <div class="w-full flex flex-col gap-1.5">
          <slot></slot>
        </div>
      `;
    },
  };

  export const AccordionTrigger = {
    name: 'accordion-trigger',
    setup() {
      const accordion = inject('accordion');
      if (!accordion) {
        console.error(
          'SSR Error: <accordion-trigger> must be used inside an <accordion> component.',
        );
        return { handleClick: () => {} };
      }
      const { toggle } = accordion;
      const value = inject('itemValue');
      if (!value) {
        console.error(
          'SSR Error: <accordion-trigger> must be used inside an <accordion-item> component with a "value" prop.',
        );
        return { handleClick: () => {} };
      }
      return {
        handleClick: () => toggle(value),
      };
    },
    template(html) {
      return html`
        <h3>
          <button
            type="button"
            @click="handleClick"
            class="w-full flex flex-row items-start justify-start cursor-pointer"
          >
            <span
              class="flex-1 flex flex-row items-start justify-start font-medium"
            >
              <slot></slot>
            </span>
          </button>
        </h3>
      `;
    },
  };

  export const AccordionContent = {
    name: 'accordion-content',
    setup() {
      const accordion = inject('accordion');
      if (!accordion) {
        console.error(
          'SSR Error: <accordion-content> must be used inside an <accordion> component.',
        );
        return { isOpen: computed(() => false) };
      }
      const { openItems } = accordion;
      const value = inject('itemValue');
      if (!value) {
        console.error(
          'SSR Error: <accordion-content> must be used inside an <accordion-item> component with a "value" prop.',
        );
        return { isOpen: computed(() => false) };
      }
      const isOpen = computed(() => openItems.has(value));
      return { isOpen };
    },
    template(html) {
      return html`
        <div w-if="isOpen" class="pb-3 pt-1">
          <slot></slot>
        </div>
      `;
    },
  };

  export default {
    name: 'accordion',
    components: {
      'accordion-item': AccordionItem,
      'accordion-trigger': AccordionTrigger,
      'accordion-content': AccordionContent,
    },
    props: {
      type: {
        type: String,
        default: 'single',
      },
      collapsible: {
        type: Boolean,
        default: true,
      },
    },
    setup(props) {
      const openItems = state(new Set());

      function toggle(value) {
        if (props.type === 'single') {
          if (openItems.has(value)) {
            if (props.collapsible) {
              openItems.delete(value);
            }
          } else {
            openItems.clear();
            openItems.add(value);
          }
        } else if (props.type === 'multiple') {
          if (openItems.has(value)) {
            openItems.delete(value);
          } else {
            openItems.add(value);
          }
        }
      }

      provide('accordion', {
        openItems,
        toggle,
      });
    },
    template(html) {
      return html`
        <div class="w-full flex flex-col items-start justify-start gap-3">
          <slot></slot>
        </div>
      `;
    },
  };
</script>

<script type="module">
  import { provide, inject, state, computed } from '@conradklek/webs';

  export const TabsContent = {
    name: 'tabs-content',
    props: { value: { type: String, required: true } },
    setup(props) {
      const { activeTab } = inject('tabs');
      const isActive = computed(() => activeTab.value === props.value);
      return { isActive };
    },
    template(html) {
      return html`<div
        w-if="isActive"
        class="w-full mt-2 p-4 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2"
      >
        <slot></slot>
      </div>`;
    },
  };

  export const TabsTrigger = {
    name: 'tabs-trigger',
    props: { value: { type: String, required: true } },
    setup(props) {
      const { activeTab, activateTab } = inject('tabs');
      const isActive = computed(() => activeTab.value === props.value);
      const handleClick = () => activateTab(props.value);

      return { isActive, handleClick };
    },
    template(html) {
      return html`
        <button
          type="button"
          @click="handleClick"
          class="inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-popover data-[state=active]:text-foreground data-[state=active]:shadow-sm"
          :data-state="isActive ? 'active' : 'inactive'"
        >
          <slot></slot>
        </button>
      `;
    },
  };

  export const TabsList = {
    name: 'tabs-list',
    template(html) {
      return html`<div
        class="inline-flex w-full h-10 items-center justify-start rounded-md bg-muted p-1 text-muted-foreground"
      >
        <slot></slot>
      </div>`;
    },
  };

  export default {
    name: 'tabs',
    components: {
      'tabs-list': TabsList,
      'tabs-trigger': TabsTrigger,
      'tabs-content': TabsContent,
    },
    props: {
      defaultValue: { type: String, required: true },
    },
    setup(props) {
      const activeTab = state(props.defaultValue);

      function activateTab(value) {
        activeTab.value = value;
      }

      provide('tabs', { activeTab, activateTab });
    },
    template: (html) =>
      html`<div class="w-full flex flex-col"><slot></slot></div>`,
  };
</script>

<script>
  import { fs, state, onReady, watch } from '@conradklek/webs';

  export default {
    props: {
      filePath: String,
      initialState: Object,
    },
    setup(props) {
      const file = fs(props.filePath).use(props.initialState?.fileContent);
      const localContent = state('');

      watch(
        () => file.data,
        (newData) => {
          if (newData !== localContent.value) {
            localContent.value = newData || '';
          }
        },
      );

      onReady(() => {
        file.hydrate(props.initialState?.fileContent);
      });

      let saveTimeout;
      function onInput(event) {
        localContent.value = event.target.value;
        clearTimeout(saveTimeout);
        saveTimeout = setTimeout(() => {
          file.write(localContent.value);
        }, 500);
      }

      return { file, localContent, onInput };
    },
  };
</script>
<template>
  <div class="w-full relative">
    <div
      w-if="file.isLoading && !file.data"
      class="text-muted-foreground animate-pulse"
    >
      Loading...
    </div>
    <div w-if="file.error" class="text-red-500 font-medium">
      Error: {{ file.error }}
    </div>

    <textarea
      :value="localContent"
      @input="onInput"
      class="w-full h-96 p-4 border border-border rounded-lg bg-background focus:outline-none focus:ring-2 focus:ring-primary transition-shadow"
      placeholder="Start typing..."
    ></textarea>
  </div>
</template>

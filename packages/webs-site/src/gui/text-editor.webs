<script>
  import {
    fs,
    state,
    watch,
    onUnmounted,
    onMounted,
    db,
  } from '@conradklek/webs';

  export default {
    props: {
      filePath: String,
      initialContent: String,
    },
    setup(props) {
      const file = fs(props.filePath);
      const localContent = state(props.initialContent || '');
      const editorRef = state(null);

      onMounted(() => {
        const unsubscribe = db('files').subscribe(async () => {
          const newContent = await file.read();
          if (newContent !== null && newContent !== localContent.value) {
            localContent.value = newContent;
          }
        });
        onUnmounted(unsubscribe);

        editorRef.value?.focus();
      });

      let saveTimeout;
      watch(
        () => localContent.value,
        (newValue) => {
          if (typeof window === 'undefined') return;

          clearTimeout(saveTimeout);
          saveTimeout = setTimeout(() => {
            file.write(newValue, { access: 'private' });
          }, 300);
        },
      );

      return { editorRef, localContent };
    },
  };
</script>

<template>
  <div class="w-full relative">
    <textarea
      @ref="editorRef"
      bind:value="localContent"
      class="w-full h-96 p-4 border border-gray-300 rounded-lg bg-white focus:outline-none focus:ring-2 focus:ring-blue-500 transition-shadow font-mono"
      placeholder="Start typing..."
    ></textarea>
  </div>
</template>

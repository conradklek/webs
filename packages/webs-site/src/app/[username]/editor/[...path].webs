<script>
  export default {
    actions: {
      async prefetch({ fs, user, params }) {
        if (!user || user.username !== params.username) {
          return { error: 'Permission denied.' };
        }

        const path = params.path;
        if (!path) {
          return { error: 'No file path specified.' };
        }

        let content = '';
        let exists = false;
        try {
          exists = await fs.exists(path);
          if (exists) {
            const stats = await fs.stat(path);

            if (stats.isDirectory) {
              return { error: `Cannot edit a directory: ${path}` };
            }

            const file = await fs.cat(path);
            content = await file.text();
          }
        } catch (e) {
          console.error(`Editor prefetch error for path "${path}":`, e);
          return { error: 'Error loading file.' };
        }

        return {
          fileContent: content,
          path: path,
          isNewFile: !exists,
        };
      },
    },
    props: {
      initialState: Object,
      params: Object,
    },
    setup(props) {
      const filePath = props.params.path || 'untitled.txt';

      const initialContent = props.initialState?.isNewFile
        ? ''
        : props.initialState?.fileContent;

      return {
        filePath,
        initialContent,
        error: props.initialState?.error,
      };
    },
  };
</script>

<template>
  <div class="w-full max-w-3xl mx-auto">
    {#if error}
    <div class="p-4 bg-red-100 text-red-700 rounded-lg">
      <strong>Error:</strong> {{ error }}
    </div>
    {:else}
    <h1
      class="text-xl font-mono mb-4 bg-gray-100 p-2 rounded-md overflow-x-auto"
    >
      {{ filePath }}
    </h1>
    <text-editor :filePath="filePath" :initialContent="initialContent" />
    {/if}
  </div>
</template>
